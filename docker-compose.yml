---
version: "3.7"

networks:
  backend:
    external:
      name: ${BACKEND_NETWORK}

volumes:
  db:
    external:
      name: ${POSTGRES_VOLUME}
  static:
    external:
      name: ${STATIC_VOLUME}

services:

  nginx:
    image: nginx:1.14.2-alpine
    networks:
      - backend
    ports:
      - 127.0.0.1:${NGINX_PORT}:80
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf:ro
      - static:/app/statics:ro
    depends_on:
      - api
      - web
    restart: always

  api:
    image: ${API_IMAGE}
    build:
      context: .
    networks:
      - backend
    environment:
      - SECRET_KEY
      - DATABASE_URL
      - TIME_ZONE
      - DEBUG
    # volumes:
    #   - static:/app/staticc
    depends_on:
      - db
    restart: always

  db:
    image: postgres:11
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - backend
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    restart: always

  web:
    image: ${WEB_IMAGE}
    networks:
      - backend
    restart: always

  collectstatic:
    image: ${API_IMAGE}
    command: python manage.py collectstatic --noinput
    networks:
      - backend
    volumes:
      - static:/app/statics
    restart: "no"

...
